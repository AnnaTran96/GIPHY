function cov_d6xnc8fjl(){var path="/Users/annatran/Desktop/FINALLLLLL/fp_lap_1_portfolio_week/Server/server.js";var hash="9bc24ef1b30f9fed2f2cc68c1e743449c2466df3";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/annatran/Desktop/FINALLLLLL/fp_lap_1_portfolio_week/Server/server.js",statementMap:{"0":{start:{line:40,column:16},end:{line:40,column:34}},"1":{start:{line:41,column:13},end:{line:41,column:28}},"2":{start:{line:42,column:19},end:{line:42,column:41}},"3":{start:{line:43,column:11},end:{line:43,column:24}},"4":{start:{line:44,column:21},end:{line:44,column:39}},"5":{start:{line:46,column:15},end:{line:46,column:24}},"6":{start:{line:47,column:0},end:{line:47,column:19}},"7":{start:{line:48,column:0},end:{line:48,column:30}},"8":{start:{line:52,column:13},end:{line:52,column:41}},"9":{start:{line:53,column:14},end:{line:53,column:30}},"10":{start:{line:56,column:0},end:{line:58,column:2}},"11":{start:{line:57,column:4},end:{line:57,column:22}},"12":{start:{line:61,column:0},end:{line:61,column:68}},"13":{start:{line:61,column:35},end:{line:61,column:66}},"14":{start:{line:64,column:0},end:{line:66,column:2}},"15":{start:{line:65,column:22},end:{line:65,column:35}},"16":{start:{line:69,column:0},end:{line:74,column:2}},"17":{start:{line:70,column:20},end:{line:70,column:40}},"18":{start:{line:71,column:4},end:{line:71,column:24}},"19":{start:{line:72,column:15},end:{line:72,column:45}},"20":{start:{line:73,column:4},end:{line:73,column:39}},"21":{start:{line:77,column:0},end:{line:77,column:71}},"22":{start:{line:77,column:38},end:{line:77,column:69}},"23":{start:{line:80,column:0},end:{line:88,column:2}},"24":{start:{line:81,column:21},end:{line:81,column:29}},"25":{start:{line:82,column:12},end:{line:82,column:36}},"26":{start:{line:83,column:4},end:{line:83,column:41}},"27":{start:{line:85,column:4},end:{line:85,column:39}},"28":{start:{line:86,column:15},end:{line:86,column:45}},"29":{start:{line:87,column:4},end:{line:87,column:39}},"30":{start:{line:93,column:0},end:{line:93,column:25}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:56,column:16},end:{line:56,column:17}},loc:{start:{line:56,column:30},end:{line:58,column:1}},line:56},"1":{name:"(anonymous_1)",decl:{start:{line:61,column:21},end:{line:61,column:22}},loc:{start:{line:61,column:35},end:{line:61,column:66}},line:61},"2":{name:"(anonymous_2)",decl:{start:{line:64,column:25},end:{line:64,column:26}},loc:{start:{line:64,column:39},end:{line:66,column:1}},line:64},"3":{name:"(anonymous_3)",decl:{start:{line:69,column:22},end:{line:69,column:23}},loc:{start:{line:69,column:36},end:{line:74,column:1}},line:69},"4":{name:"(anonymous_4)",decl:{start:{line:77,column:24},end:{line:77,column:25}},loc:{start:{line:77,column:38},end:{line:77,column:69}},line:77},"5":{name:"(anonymous_5)",decl:{start:{line:80,column:25},end:{line:80,column:26}},loc:{start:{line:80,column:39},end:{line:88,column:1}},line:80}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9bc24ef1b30f9fed2f2cc68c1e743449c2466df3"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_d6xnc8fjl=function(){return actualCoverage;};}return actualCoverage;}cov_d6xnc8fjl();// let   express = require('express');
// let   cors = require('cors');
// let   bodyParser = require('body-parser')
// let   server = express()
// server.use(cors());
// server.use(bodyParser.text());
// let   port = 3000;
// // Initialise array of objects with {title: "", body:"", image:"", gifUrl:""}
// let   posts = [{title: "My first post", body: "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur vitae felis consectetur, auctor enim non, ultricies ligula. Donec dapibus commodo mattis. Suspendisse potenti. Sed vel risus in arcu consectetur sagittis efficitur in risus. Morbi facilisis sem et eros efficitur molestie. Pellentesque eget neque eros. Donec scelerisque consequat interdum. Maecenas ultrices vestibulum purus, in dignissim nibh ultricies a. Proin mattis neque orci. Phasellus nibh velit, tempor non blandit et, cursus vitae risus. Mauris ut turpis a erat blandit luctus et eu diam. Aliquam consectetur interdum lectus, et ultrices mi dignissim nec. Proin sodales ac justo eget fringilla. Curabitur varius metus tortor, ac mollis quam accumsan viverra. Maecenas fermentum rhoncus rhoncus.", gifUrl: "https://media3.giphy.com/media/gw3IWyGkC0rsazTi/giphy.gif?cid=abae41c13l6oh8ya0xa0mrobk6dn2debtrt6ymjuqgnch8r4&rid=giphy.gif"} ]
// server.get('/', (req, res) => {
//     res.send('Hello');
// })
// // Write get request that will send posts object to cleint side
// server.get('/posts', (req, res) => res.send(JSON.stringify(posts)));
// // Route Parameters
// // server.get('/posts/:id', (req, res) => {
// //     let   postTitle = req.params.id;
// // })
// // Write post request that will add a users post to the posts variable
// // When a post request is made, the actual variable posts is not altered, so posts aren't actually saved...
// server.post('/posts', (req, res) => {
//     let   newPost = JSON.parse(req.body); 
//     posts.push(newPost);
//     res.send(JSON.stringify(newPost)); 
// })
// server.listen(port, () => console.log(`We are live at http://localhost:${port}`));
// ATHEER START //
let express=(cov_d6xnc8fjl().s[0]++,require('express'));let cors=(cov_d6xnc8fjl().s[1]++,require('cors'));let bodyParser=(cov_d6xnc8fjl().s[2]++,require('body-parser'));let fs=(cov_d6xnc8fjl().s[3]++,require('fs'));// Required to initialise JSON for backend
let{response}=(cov_d6xnc8fjl().s[4]++,require('express'));let server=(cov_d6xnc8fjl().s[5]++,express());cov_d6xnc8fjl().s[6]++;server.use(cors());cov_d6xnc8fjl().s[7]++;server.use(bodyParser.text());// Initilise posts, an array of objects with {title: "", body:"", image:"", comments: []} from external JSON File. 
let data=(cov_d6xnc8fjl().s[8]++,fs.readFileSync('data.JSON'));let posts=(cov_d6xnc8fjl().s[9]++,JSON.parse(data));cov_d6xnc8fjl().s[10]++;server.get('/',(req,res)=>{cov_d6xnc8fjl().f[0]++;cov_d6xnc8fjl().s[11]++;res.send('Hello');});// Write get request that will send posts object to cleint side
cov_d6xnc8fjl().s[12]++;server.get('/posts',(req,res)=>{cov_d6xnc8fjl().f[1]++;cov_d6xnc8fjl().s[13]++;return res.send(JSON.stringify(posts));});// Route Parameters
cov_d6xnc8fjl().s[14]++;server.get('/posts/:id',(req,res)=>{cov_d6xnc8fjl().f[2]++;let postTitle=(cov_d6xnc8fjl().s[15]++,req.params.id);});// Write post request that will add a users post to the posts variable and appends the JSON file
cov_d6xnc8fjl().s[16]++;server.post('/posts',(req,res)=>{cov_d6xnc8fjl().f[3]++;let newPost=(cov_d6xnc8fjl().s[17]++,JSON.parse(req.body));cov_d6xnc8fjl().s[18]++;posts.push(newPost);let data=(cov_d6xnc8fjl().s[19]++,JSON.stringify(posts,null,2));cov_d6xnc8fjl().s[20]++;fs.writeFileSync('data.JSON',data);});// Write get request for comments
cov_d6xnc8fjl().s[21]++;server.get('/comments',(req,res)=>{cov_d6xnc8fjl().f[4]++;cov_d6xnc8fjl().s[22]++;return res.send(JSON.stringify(posts));});// Write post request that will add a comment to the comments variable and appends it to to the JSON file
cov_d6xnc8fjl().s[23]++;server.post('/comments',(req,res)=>{cov_d6xnc8fjl().f[5]++;let newComment=(cov_d6xnc8fjl().s[24]++,req.body);let i=(cov_d6xnc8fjl().s[25]++,newComment.slice(-2,-1));cov_d6xnc8fjl().s[26]++;newComment=newComment.slice(1,-2);cov_d6xnc8fjl().s[27]++;posts[i].comments.push(newComment);let data=(cov_d6xnc8fjl().s[28]++,JSON.stringify(posts,null,2));cov_d6xnc8fjl().s[29]++;fs.writeFileSync('data.JSON',data);});// let   port = process.env.PORT || 3000;
// module.exports = server.listen(port, () => console.log(`We are live at http://localhost:${port}`));      
cov_d6xnc8fjl().s[30]++;modules.exports=server;// ATHEER END //
//# sourceMappingURL=data:application/json;charset=utf-8;base64,